/*
A natural class with a constructor.
The parameters of the constructor will create local properties that are named the same.
*/
class Robot(name : String) {}

/*
*/
compartment Behavior() {

    var name : String = "Behavior"

    // Do we want these possible variations to be valid?
    // 1) without playedBy could lead to runtime errors
    // role ServiceRole {
    // 2) constructor parentheses are optional when empty
    // role ServiceRole playedBy Robot {
    /*

    */
    role ServiceRole() playedBy Robot {
        var name : String = "ServiceRole"
        def move() {
            // a +this activates role dispatch on the conceptual whole
            /*
            How could one verify (at compile time, semantic analysis) that +this.name()
            will indeed return a value (i.e., is defined)?
            */
            // This should return ServiceRole.name
            var dynamicName : String = +this.name
            // How to reference the enclosing context (i.e., compartment)?
            // thisC, cthis, other ideas?
            var contextName : String = thisC.name
            // reference the respective role
            var roleName : String = this.name
            // this can be typechecked by playedBy
            var robotName : String = base.name
            System.println("Move $robotName from $roleName in $contextName")
        }
    }
}

def main() {
    var myRobot : Robot = new Robot("Pete")
    var robotBehavior : Behavior = new Behavior()
    myRobot play robotBehavior.ServiceRole

    myRobot.move()
}

